apiVersion: v1
kind: Secret
metadata:
  name: jmsynapse-config-secrets
type: Opaque
stringData:
  database.yaml: |
    ## Database ##
    
    # The 'database' setting defines the database that synapse uses to store all of
    # its data.
    #
    # 'name' gives the database engine to use: either 'sqlite3' (for SQLite) or
    # 'psycopg2' (for PostgreSQL).
    #
    # 'args' gives options which are passed through to the database engine,
    # except for options starting 'cp_', which are used to configure the Twisted
    # connection pool. For a reference to valid arguments, see:
    #   * for sqlite: https://docs.python.org/3/library/sqlite3.html#sqlite3.connect
    #   * for postgres: https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-PARAMKEYWORDS
    #   * for the connection pool: https://twistedmatrix.com/documents/current/api/twisted.enterprise.adbapi.ConnectionPool.html#__init__
    #
    #
    # Example SQLite configuration:
    #
    #database:
    #  name: sqlite3
    #  args:
    #    database: /path/to/homeserver.db
    #
    #
    # Example Postgres configuration:
    #
    database:
      name: psycopg2
      args:
        user: synapse_user
        password: somesupersecretpassword
        database: synapse
        host: jmsynapsepsql
        port: 5432
        cp_min: 5
        cp_max: 10
    #
    # For more information on using Synapse with Postgres, see `docs/postgres.md`.
    #
    
  turn.yaml: |
    ## TURN ##
    
    # The public URIs of the TURN server to give to clients
    #
    turn_uris: []
    
    # The shared secret used to compute passwords for the TURN server
    #
    turn_shared_secret: "YOUR_SHARED_SECRET"
    
    # The Username and password if the TURN server needs them and
    # does not use a token
    #
    #turn_username: "TURNSERVER_USERNAME"
    #turn_password: "TURNSERVER_PASSWORD"
    
    # How long generated TURN credentials last
    #
    turn_user_lifetime: 1h
    
    # Whether guests should be allowed to use the TURN server.
    # This defaults to True, otherwise VoIP will be unreliable for guests.
    # However, it does introduce a slight security risk as it allows users to
    # connect to arbitrary endpoints without having first signed up for a
    # valid account (e.g. by passing a CAPTCHA).
    #
    turn_allow_guests: false

  registration.yaml: |
    ## Registration ##
    #
    # Registration can be rate-limited using the parameters in the "Ratelimiting"
    # section of this file.
    
    # Enable registration for new users.
    #
    #enable_registration: false
    
    # Time that a user's session remains valid for, after they log in.
    #
    # Note that this is not currently compatible with guest logins.
    #
    # Note also that this is calculated at login time: changes are not applied
    # retrospectively to users who have already logged in.
    #
    # By default, this is infinite.
    #
    #session_lifetime: 24h
    
    # The user must provide all of the below types of 3PID when registering.
    #
    #registrations_require_3pid:
    #  - email
    #  - msisdn
    
    # Explicitly disable asking for MSISDNs from the registration
    # flow (overrides registrations_require_3pid if MSISDNs are set as required)
    #
    #disable_msisdn_registration: true
    
    # Mandate that users are only allowed to associate certain formats of
    # 3PIDs with accounts on this server.
    #
    #allowed_local_3pids:
    #  - medium: email
    #    pattern: '^[^@]+@matrix\.org$'
    #  - medium: email
    #    pattern: '^[^@]+@vector\.im$'
    #  - medium: msisdn
    #    pattern: '\+44'
    
    # Enable 3PIDs lookup requests to identity servers from this server.
    #
    #enable_3pid_lookup: true
    
    # If set, allows registration of standard or admin accounts by anyone who
    # has the shared secret, even if registration is otherwise disabled.
    #
    registration_shared_secret: "SgrRM96lDR&qM,KPiOuj:iK0:IL#UHGSMZ21GX^I28^RX7cVjy"
    
    # Set the number of bcrypt rounds used to generate password hash.
    # Larger numbers increase the work factor needed to generate the hash.
    # The default number is 12 (which equates to 2^12 rounds).
    # N.B. that increasing this will exponentially increase the time required
    # to register or login - e.g. 24 => 2^24 rounds which will take >20 mins.
    #
    #bcrypt_rounds: 12
    
    # Allows users to register as guests without a password/email/etc, and
    # participate in rooms hosted on this server which have been made
    # accessible to anonymous users.
    #
    #allow_guest_access: false
    
    # The identity server which we suggest that clients should use when users log
    # in on this server.
    #
    # (By default, no suggestion is made, so it is left up to the client.
    # This setting is ignored unless public_baseurl is also set.)
    #
    #default_identity_server: https://matrix.org
    
    # Handle threepid (email/phone etc) registration and password resets through a set of
    # *trusted* identity servers. Note that this allows the configured identity server to
    # reset passwords for accounts!
    #
    # Be aware that if `email` is not set, and SMTP options have not been
    # configured in the email config block, registration and user password resets via
    # email will be globally disabled.
    #
    # Additionally, if `msisdn` is not set, registration and password resets via msisdn
    # will be disabled regardless, and users will not be able to associate an msisdn
    # identifier to their account. This is due to Synapse currently not supporting
    # any method of sending SMS messages on its own.
    #
    # To enable using an identity server for operations regarding a particular third-party
    # identifier type, set the value to the URL of that identity server as shown in the
    # examples below.
    #
    # Servers handling the these requests must answer the `/requestToken` endpoints defined
    # by the Matrix Identity Service API specification:
    # https://matrix.org/docs/spec/identity_service/latest
    #
    # If a delegate is specified, the config option public_baseurl must also be filled out.
    #
    account_threepid_delegates:
        #email: https://example.com     # Delegate email sending to example.com
        #msisdn: http://localhost:8090  # Delegate SMS sending to this local process
    
    # Whether users are allowed to change their displayname after it has
    # been initially set. Useful when provisioning users based on the
    # contents of a third-party directory.
    #
    # Does not apply to server administrators. Defaults to 'true'
    #
    #enable_set_displayname: false
    
    # Whether users are allowed to change their avatar after it has been
    # initially set. Useful when provisioning users based on the contents
    # of a third-party directory.
    #
    # Does not apply to server administrators. Defaults to 'true'
    #
    #enable_set_avatar_url: false
    
    # Whether users can change the 3PIDs associated with their accounts
    # (email address and msisdn).
    #
    # Defaults to 'true'
    #
    #enable_3pid_changes: false
    
    # Users who register on this homeserver will automatically be joined
    # to these rooms.
    #
    # By default, any room aliases included in this list will be created
    # as a publicly joinable room when the first user registers for the
    # homeserver. This behaviour can be customised with the settings below.
    # If the room already exists, make certain it is a publicly joinable
    # room. The join rule of the room must be set to 'public'.
    #
    #auto_join_rooms:
    #  - "#example:example.com"
    
    # Where auto_join_rooms are specified, setting this flag ensures that the
    # the rooms exist by creating them when the first user on the
    # homeserver registers.
    #
    # By default the auto-created rooms are publicly joinable from any federated
    # server. Use the autocreate_auto_join_rooms_federated and
    # autocreate_auto_join_room_preset settings below to customise this behaviour.
    #
    # Setting to false means that if the rooms are not manually created,
    # users cannot be auto-joined since they do not exist.
    #
    # Defaults to true. Uncomment the following line to disable automatically
    # creating auto-join rooms.
    #
    #autocreate_auto_join_rooms: false
    
    # Whether the auto_join_rooms that are auto-created are available via
    # federation. Only has an effect if autocreate_auto_join_rooms is true.
    #
    # Note that whether a room is federated cannot be modified after
    # creation.
    #
    # Defaults to true: the room will be joinable from other servers.
    # Uncomment the following to prevent users from other homeservers from
    # joining these rooms.
    #
    #autocreate_auto_join_rooms_federated: false
    
    # The room preset to use when auto-creating one of auto_join_rooms. Only has an
    # effect if autocreate_auto_join_rooms is true.
    #
    # This can be one of "public_chat", "private_chat", or "trusted_private_chat".
    # If a value of "private_chat" or "trusted_private_chat" is used then
    # auto_join_mxid_localpart must also be configured.
    #
    # Defaults to "public_chat", meaning that the room is joinable by anyone, including
    # federated servers if autocreate_auto_join_rooms_federated is true (the default).
    # Uncomment the following to require an invitation to join these rooms.
    #
    #autocreate_auto_join_room_preset: private_chat
    
    # The local part of the user id which is used to create auto_join_rooms if
    # autocreate_auto_join_rooms is true. If this is not provided then the
    # initial user account that registers will be used to create the rooms.
    #
    # The user id is also used to invite new users to any auto-join rooms which
    # are set to invite-only.
    #
    # It *must* be configured if autocreate_auto_join_room_preset is set to
    # "private_chat" or "trusted_private_chat".
    #
    # Note that this must be specified in order for new users to be correctly
    # invited to any auto-join rooms which have been set to invite-only (either
    # at the time of creation or subsequently).
    #
    # Note that, if the room already exists, this user must be joined and
    # have the appropriate permissions to invite new members.
    #
    #auto_join_mxid_localpart: system
    
    # When auto_join_rooms is specified, setting this flag to false prevents
    # guest accounts from being automatically joined to the rooms.
    #
    # Defaults to true.
    #
    #auto_join_rooms_for_guests: false
    
  api_config.yaml: |
    ## API Configuration ##
    
    # Controls for the state that is shared with users who receive an invite
    # to a room
    #
    room_prejoin_state:
       # By default, the following state event types are shared with users who
       # receive invites to the room:
       #
       # - m.room.join_rules
       # - m.room.canonical_alias
       # - m.room.avatar
       # - m.room.encryption
       # - m.room.name
       # - m.room.create
       #
       # Uncomment the following to disable these defaults (so that only the event
       # types listed in 'additional_event_types' are shared). Defaults to 'false'.
       #
       #disable_default_event_types: true
    
       # Additional state event types to share with users when they are invited
       # to a room.
       #
       # By default, this list is empty (so only the default event types are shared).
       #
       #additional_event_types:
       #  - org.example.custom.event.type
    
    
    # A list of application service config files to use
    #
    #app_service_config_files:
    #  - app_service_1.yaml
    #  - app_service_2.yaml
    
    # Uncomment to enable tracking of application service IP addresses. Implicitly
    # enables MAU tracking for application service users.
    #
    #track_appservice_user_ips: true
    
    
    # a secret which is used to sign access tokens. If none is specified,
    # the registration_shared_secret is used, if one is given; otherwise,
    # a secret key is derived from the signing key.
    #
    macaroon_secret_key: "kRbQYkk,9@Wkz.qJCSH:A=S;mRgP34&fX-_bW.lr,kWH#yPx3N"
    
    # a secret which is used to calculate HMACs for form values, to stop
    # falsification of values. Must be specified for the User Consent
    # forms to work.
    #
    form_secret: "rwxI9Tt_ik-fwKMsbdXTDPx-d#2iAg0zB_SJQl_Ri#dekRi+kd"
    
