# modify this file to contain your various secrets and values throughout your application stacks. these values will be
# by the init-deploy.sh script to generate kustomize overlays and kubernetes secrets appropriate to your applications.

### Synapse Homeserver Domains ###
# a space-delimited list of domains for which to generate synapse stack overlays
# e.g. homeservers="example.com example.org"
homeservers="example.com"

# for each domain listed in homeservers, we need to identify values to substitute throughout various files
# variables must follow this syntax for bash variable substitution to work:
# - remove all periods from the domain
# - underscores between domain and variable-identifier
# - just follow these examples and you'll be fine
# example.com values

## these ones are used in kustomization.yaml to separate and tag resources ##
examplecom_prefix='excom-'
examplecom_namespace='example'
examplecom_organization='example.com'

## these are proper secrets for this particular app stack ##
examplecom_synapse_db_name="synapse"
examplecom_synapse_db_user="synapse_user"
examplecom_synapse_db_password="supersecretsecurepassword123"

# example.org values
## these ones are used in kustomization.yaml to separate and tag resources ##
#examplecom_prefix='excom-'
#examplecom_namespace='example'
#examplecom_organization='example.com'
 
## these are proper secrets for this particular app stack, don't commit these files to git! ##
#examplecom_synapse_db_name="synapse"
#examplecom_synapse_db_user="synapse_user"
#examplecom_synapse_db_password="supersecretsecurepassword123"

## matrix-media-repo related variables
# use a multitenant mmr deployment for more effective data deduplication across multiple domains (true)
# use separate single-tenant deployments if you want to keep data separated (false)
# WARNING: single-tenant deployment of MMR is not ready yet and will just error out and leave it up to you to configure.
mmr_multitenant='true'
mmr_multitenant_namespace='shared'
# use a persistent volume claim for storing media data locally. set this to 'true' if you do not have an S3-compatible
# backend for media storage. set this to 'false' if you plan on using an S3-compatible object storage backend.
mmr_multitenant_local_storage='false'
# size of 
mmr_multitenant_local_storage_size='100M'

mmr_multitenant_db_name="media_repo"
mmr_multitenant_db_user="media_repo"
mmr_multitenant_db_password="somesupersecretmediapassword098765"

# set these variables to configure connection to your S3-compatible backend
mmr_multitenant_s3_bucket_name='some-bucket-name'
mmr_multitenant_s3_access_key='some-access-key'
mmr_multitenant_s3_secret_key='some-secret-key'
mmr_multitenant_s3_endpoint='your.endpoint.url'
